@startuml

title __SRC's Class Diagram__\n

    abstract class Amenities {
        {abstract} + getDescription()
        + toString()
    }
  


    class DeluxeRoom {
        {static} - BASERATE : double
        + DeluxeRoom()
        + cost()
        + toString()
    }

  


    class FoodBar {
        {static} - COST : double
        + FoodBar()
        + cost()
        + getDescription()
        + toString()
    }

  

    class MasterRoach {
        - cardNum : String
        - cvv : String
        - dateOfExp : String
        - name : String
        + MasterRoach()
        + MasterRoach()
        + pay()
        + toString()
    }


    interface Payment {
        {abstract} + pay()
    }


    class RefillBar {
        {static} - COST : double
        + RefillBar()
        + cost()
        + getDescription()
        + toString()
    }


    class RegularRoom {
        {static} - BASERATE : double
        + RegularRoom()
        + cost()
        + toString()
    }


    class RoachColony {
        - growthRate : double
        - initPopulation : int
        - name : String
        - roomNumber : int
        + RoachColony()
        + RoachColony()
        + getName()
        + getRoom()
        + getRoomNumber()
        + party()
        + setName()
        + setRoom()
        + setRoomNumber()
        + toString()
    }


    class RoachMotel {
        - availableRoom : ArrayList<Integer>
        {static} - instance : RoachMotel
        - roomCapacity : int
        + checkIn()
        + checkOut()
        + createRoom()
        + getAvailableRoom()
        {static} + getInstance()
        + toString()
        - RoachMotel()
    }


    class RoachMotelTester {
        {static} + main()
    }


    class RoachPal {
        - email : String
        - name : String
        + RoachPal()
        + RoachPal()
        + pay()
        + toString()
    }


    abstract class Room {
        # description : String
        - amenitiesList : ArrayList<String>
        + Room()
        {abstract} + cost()
        + getAmenitiesList()
        + getDescription()
        + setAmenitiesList()
        + toString()
    }


    class RoomFactory {
        + makeRoom()
    }


    abstract class RoomMakerAbstract {
        {abstract} + makeRoom()
    }


    class Shower {
        {static} - COST : double
        + Shower()
        + cost()
        + getDescription()
        + toString()
    }


    class Spa {
        {static} - COST : double
        + Spa()
        + cost()
        + getDescription()
        + toString()
    }


    class Suite {
        {static} - BASERATE : double
        + Suite()
        + cost()
        + toString()
    }


  Amenities -up-|> Room
  DeluxeRoom -up-|> Room
  FoodBar -up-|> Amenities
  FoodBar o-- Room : RoomType
  MasterRoach .up.|> Payment
  RefillBar -up-|> Amenities
  RefillBar o-- Room : RoomType
  RegularRoom -up-|> Room
  RoachColony o-- Room : Room
  RoachPal .up.|> Payment
  Room o-- RoachColony : customer
  RoomFactory -up-|> RoomMakerAbstract
  Shower -up-|> Amenities
  Shower o-- Room : RoomType
  Spa -up-|> Amenities
  Spa o-- Room : RoomType
  Suite -up-|> Room


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
